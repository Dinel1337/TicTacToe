:root {
  --marginWLD: 200px;
  --ff: "crem";
  --ff-size: 44px;
  --ff-spacing: 9px;
  --game-size-small: 150px;
  --game-size-large: 600px;
  --grid-size-small: 30px;
  --grid-size-large: 150px;
  --grid-gap-small: 20px;
  --grid-gap-large: 40px;
  --border-radius-small: 4px;
  --border-radius-large: 26px;
  --animation-duration: 0.5s;
  --animation-delay: 0.1s;
  --perspective: 500px;
  --rotate-x: 60deg;
  --rotate-y: -10deg;
  --rotate-z: -20deg;
  --translate-y: -20px;
  --translate-z: 20px;
  --opacity-start: 0;
  --opacity-end: 1;
  --blur-radius: 15px;
  --blur-radius-small: 5px;
  --background-color-efir: rgba(231, 255, 253, 0.929);
  --background-color-no-my-move: rgba(48, 42, 42, 0.653);
  --background-color-WLD: rgba(29, 26, 26, 0.556);
  --color-aliceblue: aliceblue;
  --color-black: black;
  --color-rgb-48-36-36: rgb(48, 36, 36);
  --color-rgb-224-255-208: rgb(224, 255, 208);
  --size-load-end: 24px;
}

.game {
  display: flex;
  position: absolute;
  left: 85%;
  top: 20%;
  transform: translate(-50%, -50%) perspective(var(--perspective))
    rotateX(var(--rotate-x)) rotateY(var(--rotate-y)) rotateZ(var(--rotate-z))
    translateY(var(--translate-y));
  z-index: 20;
  opacity: var(--opacity-start);
  flex-direction: column;
  gap: var(--grid-gap-small);
  width: var(--game-size-small);
  height: var(--game-size-small);
}

.game-animation {
  animation: game;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
  animation-delay: var(--animation-delay);
}

@keyframes game {
  from {
    left: 80%;
    top: 20%;
    opacity: var(--opacity-start);
    width: var(--game-size-small);
    height: var(--game-size-small);
    transform: translate(-50%, -50%) perspective(var(--perspective))
      rotateX(40deg) rotateY(var(--rotate-y)) rotateZ(-10deg)
      translateZ(var(--translate-z));
  }
  to {
    left: 50%;
    top: 50%;
    opacity: var(--opacity-end);
    width: var(--game-size-large);
    height: var(--game-size-large);
    transform: translate(-50%, -50%) perspective(var(--perspective));
  }
}

.game-animation-end {
  animation: game-end;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
}

@keyframes game-end {
  from {
    left: 50%;
    top: 50%;
    opacity: var(--opacity-end);
    width: var(--game-size-large);
    height: var(--game-size-large);
    transform: translate(-50%, -50%) perspective(var(--perspective));
  }
  to {
    left: 80%;
    top: 20%;
    opacity: var(--opacity-start);
    width: var(--game-size-small);
    height: var(--game-size-small);
    transform: translate(-50%, -50%) perspective(var(--perspective))
      rotateX(40deg) rotateY(var(--rotate-y)) rotateZ(-10deg)
      translateZ(var(--translate-z));
  }
}

.game-sec {
  display: grid;
  grid-template-columns: var(--grid-size-small) var(--grid-size-small) var(
      --grid-size-small
    );
  grid-template-rows: var(--grid-size-small) var(--grid-size-small) var(
      --grid-size-small
    );
  grid-gap: var(--grid-gap-small);
}

.game-sec-animation {
  animation: game-sec;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
  animation-delay: var(--animation-delay);
}

@keyframes game-sec {
  from {
    grid-template-columns: var(--grid-size-small) var(--grid-size-small) var(
        --grid-size-small
      );
    grid-template-rows: var(--grid-size-small) var(--grid-size-small) var(
        --grid-size-small
      );
    grid-gap: var(--grid-gap-small);
  }
  to {
    grid-template-columns: var(--grid-size-large) var(--grid-size-large) var(
        --grid-size-large
      );
    grid-template-rows: var(--grid-size-large) var(--grid-size-large) var(
        --grid-size-large
      );
    grid-gap: var(--grid-gap-large);
  }
}

.game-sec-animation-end {
  animation: game-sec-end;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
}

@keyframes game-sec-end {
  from {
    grid-template-columns: var(--grid-size-large) var(--grid-size-large) var(
        --grid-size-large
      );
    grid-template-rows: var(--grid-size-large) var(--grid-size-large) var(
        --grid-size-large
      );
    grid-gap: var(--grid-gap-large);
  }
  to {
    grid-template-columns: var(--grid-size-small) var(--grid-size-small) var(
        --grid-size-small
      );
    grid-template-rows: var(--grid-size-small) var(--grid-size-small) var(
        --grid-size-small
      );
    grid-gap: var(--grid-gap-small);
  }
}

.efir {
  display: flex;
  align-items: center;
  justify-content: center;
  background-color: var(--background-color-efir);
  cursor: pointer;
  border-radius: var(--border-radius-small);
  transition: all 0.2s ease;
  opacity: var(--opacity-end);
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
  animation-delay: 0.2s;
}

.efir-animation {
  animation: efir;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
  animation-delay: 0.2s;
  border-radius: var(--border-radius-large) !important;
}

@keyframes efir {
  0% {
    border-radius: var(--border-radius-small);
  }
  100% {
    border-radius: var(--border-radius-large) !important;
  }
}

.efir-animation-end {
  animation: efir-end;
  animation-duration: var(--animation-duration);
  animation-fill-mode: forwards;
  border-radius: var(--border-radius-large) !important;
}

@keyframes efir-end {
  0% {
    border-radius: var(--border-radius-large);
  }
  100% {
    border-radius: var(--border-radius-small) !important;
  }
}

.no-my-move {
  position: fixed;
  top: 0;
  left: 0;
  width: 100%;
  height: 100%;
  background-color: var(--background-color-no-my-move);
  opacity: 0.6;
  backdrop-filter: blur(var(--blur-radius));
  z-index: 30;
  display: none;
  animation: block-move;
  animation-duration: var(--animation-duration);
}

@keyframes block-move {
  from {
    opacity: var(--opacity-start);
  }
  to {
    opacity: 0.6;
  }
}

.game-sec:hover > :hover {
  opacity: var(--opacity-end) !important;
  background-color: var(--color-rgb-224-255-208);
  transform: scale(1.04);
}

.game-sec:not(:hover) > :hover {
  opacity: 0.3 !important;
}

.crest {
  position: relative;
  width: 100px;
  height: 100px;
  transform: rotate(-45deg);
}

.line {
  position: absolute;
  background-color: var(--color-rgb-48-36-36);
  border-radius: 12px;
  opacity: 0.6;
  transform: scale(0);
  animation: appear var(--animation-duration) forwards;
}

.line.horizontal {
  width: 100%;
  height: 12px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation-delay: var(--animation-delay);
}

.line.vertical {
  height: 100%;
  width: 12px;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%) scale(0);
  animation-delay: calc(var(--animation-delay) * 2);
}

@keyframes appear {
  to {
    opacity: var(--opacity-end);
    transform: translate(-50%, -50%) scale(1);
  }
}

.nolik {
  width: 80px;
  height: 80px;
  border: 10px solid var(--color-black);
  border-radius: 50%;
  opacity: var(--opacity-start);
  transform: scale(0);
  animation: Z 0.3s ease-out forwards;
}

@keyframes Z {
  0% {
    opacity: var(--opacity-start);
    transform: scale(0);
  }
  100% {
    opacity: var(--opacity-end);
    transform: scale(0.91);
  }
}

.WLD {
  position: absolute;
  display: none;
  justify-content: center;
  align-items: center;
  width: 100%;
  height: 100%;
  opacity: var(--opacity-end);
  text-align: center;
  background-color: var(--background-color-WLD);
  backdrop-filter: blur(var(--blur-radius-small));
  z-index: 99;
}

#win,
#lose,
#draw {
  color: var(--color-aliceblue);
  font-size: var(--ff-size);
  letter-spacing: var(--ff-spacing);
  margin-top: var(--marginWLD);
  font-family: var(--ff);
}

.WLD-start {
  animation: WLD-start 1s forwards;
}

.WLD-end {
  animation: WLD-end 0.7s forwards;
}

@keyframes WLD-start {
  0% {
    opacity: var(--opacity-start);
    margin-top: var(--marginWLD);
  }
  100% {
    opacity: var(--opacity-end);
    margin-top: 0px;
  }
}

@keyframes WLD-end {
  0% {
    opacity: var(--opacity-end);
    margin-top: 0px;
  }
  100% {
    opacity: var(--opacity-start);
    margin-top: var(--marginWLD);
  }
}

.waiting {
  display: flex;
  position: absolute;
  left: 50%;
  top: 80%;
  transform: translate(-50%, -50%);
  z-index: 31;
  opacity: var(--opacity-start);
  height: 70px;
  width: 350px;
  align-items: center;
  display: none;
}

.waiting span {
  font-size: var(--size-load-end);
  font-family: var(--ff);
  color: var(--color-aliceblue);
  margin-right: 20px;
}

.loader {
  position: relative;
  width: 40px;
  height: 40px;
  transform: rotate(45deg);
}

.load {
  position: absolute;
  top: 0;
  left: 0;
  width: 14px;
  height: 14px;
  border-radius: var(--border-radius-small);
  background: white;
  background-size: cover;
  background-position: center;
  background-attachment: fixed;
  animation: load-animation 2s ease-in-out infinite both;
}

@keyframes load-animation {
  0% {
    top: 0;
    left: 0;
  }
  25% {
    top: 22px;
    left: 0px;
  }
  50% {
    top: 22px;
    left: 22px;
  }
  75% {
    top: 0px;
    left: 22px;
  }
  100% {
    top: 0px;
    left: 0px;
  }
}

.load:nth-of-type(1) {
  animation-delay: 0s;
}
.load:nth-of-type(2) {
  animation-delay: 0.5s;
}
.load:nth-of-type(3) {
  animation-delay: 1s;
}
.load:nth-of-type(4) {
  animation-delay: 1.5s;
}

#EndClick {
  z-index: 101;
  width: 450px;
  transition: opacity 1s 2s;
  cursor: pointer;
}
